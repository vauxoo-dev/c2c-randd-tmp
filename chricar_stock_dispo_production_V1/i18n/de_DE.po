# Translation of OpenERP Server.
# This file contains the translation of the following modules:
#	* chricar_view_id
#
msgid ""
msgstr ""
"Project-Id-Version: OpenERP Server 6.0.1\n"
"Report-Msgid-Bugs-To: support@openerp.com\n"
"POT-Creation-Date: 2011-03-30 20:34+0000\n"
"PO-Revision-Date: 2011-03-30 20:34+0000\n"
"Last-Translator: <>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: \n"

#. module: chricar_view_id
#: model:ir.module.module,shortdesc:chricar_view_id.module_meta_information
msgid "ChriCar unique View ID"
msgstr "ChriCar unique View ID"

#. module: chricar_view_id
#: model:ir.module.module,description:chricar_view_id.module_meta_information
msgid "\n"
"This module is funded by\n"
"ChriCar Beteiligungs- und Beratungs- GmbH\n"
"http://www.chricar.at/ChriCar/index.html\n"
"\n"
"Developed by\n"
"Network Gulf IT - India\n"
"http://www.networkgulf.com/\n"
"\n"
"usage: get_id('your_view_name',param1,param2,param3,param4)\n"
"this function will always return the SAME unique id for a \n"
"certain combination of parameters for a view.\n"
"\n"
"Hint 1: you do not need this function if the unique id can easily be \n"
"calculated during the grouping. Example\n"
"- easy: group by product_id\n"
"- more complex: group by account_id, period_id\n"
"- very complex: group by account_id, period_id, currency_id\n"
"\n"
"Hint 2: for large tables (100000 rec)  \n"
"performance gain of factor 10x and more\n"
"split the grouping operation and the get_id into 2 views\n"
"\n"
"slow:\n"
"select get_id(tablename,param1,param2,...), param1, param2, ... sum(field1), ...\n"
"from\n"
"group by get_id(tablename,param1,param2,...) ,param1,param2,...\n"
"\n"
"fast:\n"
"1) view1: \n"
"select ....\n"
"from\n"
"group by param1,param2,...\n"
"2) view 2\n"
"select get_id('view1',param1,param2,...),* from view1;\n"
"(no group by here)\n"
""
msgstr "\n"
"This module is funded by\n"
"ChriCar Beteiligungs- und Beratungs- GmbH\n"
"http://www.chricar.at/ChriCar/index.html\n"
"\n"
"Developed by\n"
"Network Gulf IT - India\n"
"http://www.networkgulf.com/\n"
"\n"
"usage: get_id('your_view_name',param1,param2,param3,param4)\n"
"this function will always return the SAME unique id for a \n"
"certain combination of parameters for a view.\n"
"\n"
"Hint 1: you do not need this function if the unique id can easily be \n"
"calculated during the grouping. Example\n"
"- easy: group by product_id\n"
"- more complex: group by account_id, period_id\n"
"- very complex: group by account_id, period_id, currency_id\n"
"\n"
"Hint 2: for large tables (100000 rec)  \n"
"performance gain of factor 10x and more\n"
"split the grouping operation and the get_id into 2 views\n"
"\n"
"slow:\n"
"select get_id(tablename,param1,param2,...), param1, param2, ... sum(field1), ...\n"
"from\n"
"group by get_id(tablename,param1,param2,...) ,param1,param2,...\n"
"\n"
"fast:\n"
"1) view1: \n"
"select ....\n"
"from\n"
"group by param1,param2,...\n"
"2) view 2\n"
"select get_id('view1',param1,param2,...),* from view1;\n"
"(no group by here)\n"
""

#. module: chricar_view_id
#: field:chricar_view_id,name:0
msgid "Name"
msgstr "Name"

#. module: chricar_view_id
#: model:ir.model,name:chricar_view_id.model_chricar_view_id
msgid "chricar_view_id"
msgstr "chricar_view_id"

